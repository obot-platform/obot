name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger tools repo tag workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.TOOLS_DISPATCH_PAT }}
          repository: obot-platform/tools
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'

      - name: Trigger enterprise-tool repo tag workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.ENTERPRISE_TOOLS_DISPATCH_PAT }}
          repository: obot-platform/enterprise-tools
          event-type: release
          client-payload: '{"tag": "${{ github.ref_name }}"}'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: "~> v2"
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
  winget-release:
    needs: release-tag
    if: "! contains(github.ref_name, '-rc')"
    runs-on: windows-latest
    steps:
      - name: Install winget-create
        run: |
          Invoke-WebRequest -Uri 'https://aka.ms/wingetcreate/latest' -OutFile 'wingetcreate.exe'
      - name: Create WinGet Package Update Pull Request
        run: |
          $url = "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ github.ref_name }}/obot_${{ github.ref_name }}_windows_amd64.zip"
          ./wingetcreate.exe update --submit --token "${{ secrets.WINGET_GH_TOKEN }}" --urls $url --version "${{ github.ref_name }}" obot-platform.obot