//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package types

import (
	"encoding/json"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Agent) DeepCopyInto(out *Agent) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.AgentManifest.DeepCopyInto(&out.AgentManifest)
	if in.AliasAssigned != nil {
		in, out := &in.AliasAssigned, &out.AliasAssigned
		*out = new(bool)
		**out = **in
	}
	if in.AuthStatus != nil {
		in, out := &in.AuthStatus, &out.AuthStatus
		*out = make(map[string]OAuthAppLoginAuthStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ToolInfo != nil {
		in, out := &in.ToolInfo, &out.ToolInfo
		*out = new(map[string]ToolInfo)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ToolInfo, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Agent.
func (in *Agent) DeepCopy() *Agent {
	if in == nil {
		return nil
	}
	out := new(Agent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentIcons) DeepCopyInto(out *AgentIcons) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentIcons.
func (in *AgentIcons) DeepCopy() *AgentIcons {
	if in == nil {
		return nil
	}
	out := new(AgentIcons)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentList) DeepCopyInto(out *AgentList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Agent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentList.
func (in *AgentList) DeepCopy() *AgentList {
	if in == nil {
		return nil
	}
	out := new(AgentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentManifest) DeepCopyInto(out *AgentManifest) {
	*out = *in
	if in.Icons != nil {
		in, out := &in.Icons, &out.Icons
		*out = new(AgentIcons)
		**out = **in
	}
	if in.Temperature != nil {
		in, out := &in.Temperature, &out.Temperature
		*out = new(float32)
		**out = **in
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(bool)
		**out = **in
	}
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Workflows != nil {
		in, out := &in.Workflows, &out.Workflows
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.AvailableThreadTools != nil {
		in, out := &in.AvailableThreadTools, &out.AvailableThreadTools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.DefaultThreadTools != nil {
		in, out := &in.DefaultThreadTools, &out.DefaultThreadTools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OAuthApps != nil {
		in, out := &in.OAuthApps, &out.OAuthApps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.StarterMessages != nil {
		in, out := &in.StarterMessages, &out.StarterMessages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]EnvVar, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentManifest.
func (in *AgentManifest) DeepCopy() *AgentManifest {
	if in == nil {
		return nil
	}
	out := new(AgentManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Assistant) DeepCopyInto(out *Assistant) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.Icons = in.Icons
	if in.StarterMessages != nil {
		in, out := &in.StarterMessages, &out.StarterMessages
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Assistant.
func (in *Assistant) DeepCopy() *Assistant {
	if in == nil {
		return nil
	}
	out := new(Assistant)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssistantList) DeepCopyInto(out *AssistantList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Assistant, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssistantList.
func (in *AssistantList) DeepCopy() *AssistantList {
	if in == nil {
		return nil
	}
	out := new(AssistantList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssistantTool) DeepCopyInto(out *AssistantTool) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.ToolManifest.DeepCopyInto(&out.ToolManifest)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssistantTool.
func (in *AssistantTool) DeepCopy() *AssistantTool {
	if in == nil {
		return nil
	}
	out := new(AssistantTool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssistantToolList) DeepCopyInto(out *AssistantToolList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AssistantTool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssistantToolList.
func (in *AssistantToolList) DeepCopy() *AssistantToolList {
	if in == nil {
		return nil
	}
	out := new(AssistantToolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthProvider) DeepCopyInto(out *AuthProvider) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.AuthProviderManifest = in.AuthProviderManifest
	in.AuthProviderStatus.DeepCopyInto(&out.AuthProviderStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthProvider.
func (in *AuthProvider) DeepCopy() *AuthProvider {
	if in == nil {
		return nil
	}
	out := new(AuthProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthProviderList) DeepCopyInto(out *AuthProviderList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AuthProvider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthProviderList.
func (in *AuthProviderList) DeepCopy() *AuthProviderList {
	if in == nil {
		return nil
	}
	out := new(AuthProviderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthProviderManifest) DeepCopyInto(out *AuthProviderManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthProviderManifest.
func (in *AuthProviderManifest) DeepCopy() *AuthProviderManifest {
	if in == nil {
		return nil
	}
	out := new(AuthProviderManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthProviderStatus) DeepCopyInto(out *AuthProviderStatus) {
	*out = *in
	if in.RequiredConfigurationParameters != nil {
		in, out := &in.RequiredConfigurationParameters, &out.RequiredConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MissingConfigurationParameters != nil {
		in, out := &in.MissingConfigurationParameters, &out.MissingConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OptionalConfigurationParameters != nil {
		in, out := &in.OptionalConfigurationParameters, &out.OptionalConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthProviderStatus.
func (in *AuthProviderStatus) DeepCopy() *AuthProviderStatus {
	if in == nil {
		return nil
	}
	out := new(AuthProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authorization) DeepCopyInto(out *Authorization) {
	*out = *in
	out.AuthorizationManifest = in.AuthorizationManifest
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(User)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authorization.
func (in *Authorization) DeepCopy() *Authorization {
	if in == nil {
		return nil
	}
	out := new(Authorization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationList) DeepCopyInto(out *AuthorizationList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Authorization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationList.
func (in *AuthorizationList) DeepCopy() *AuthorizationList {
	if in == nil {
		return nil
	}
	out := new(AuthorizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuthorizationManifest) DeepCopyInto(out *AuthorizationManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuthorizationManifest.
func (in *AuthorizationManifest) DeepCopy() *AuthorizationManifest {
	if in == nil {
		return nil
	}
	out := new(AuthorizationManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Credential) DeepCopyInto(out *Credential) {
	*out = *in
	if in.EnvVars != nil {
		in, out := &in.EnvVars, &out.EnvVars
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExpiresAt != nil {
		in, out := &in.ExpiresAt, &out.ExpiresAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Credential.
func (in *Credential) DeepCopy() *Credential {
	if in == nil {
		return nil
	}
	out := new(Credential)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CredentialList) DeepCopyInto(out *CredentialList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Credential, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CredentialList.
func (in *CredentialList) DeepCopy() *CredentialList {
	if in == nil {
		return nil
	}
	out := new(CredentialList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronJob) DeepCopyInto(out *CronJob) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.CronJobManifest.DeepCopyInto(&out.CronJobManifest)
	if in.LastRunStartedAt != nil {
		in, out := &in.LastRunStartedAt, &out.LastRunStartedAt
		*out = (*in).DeepCopy()
	}
	if in.LastSuccessfulRunCompleted != nil {
		in, out := &in.LastSuccessfulRunCompleted, &out.LastSuccessfulRunCompleted
		*out = (*in).DeepCopy()
	}
	if in.NextRunAt != nil {
		in, out := &in.NextRunAt, &out.NextRunAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronJob.
func (in *CronJob) DeepCopy() *CronJob {
	if in == nil {
		return nil
	}
	out := new(CronJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronJobList) DeepCopyInto(out *CronJobList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CronJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronJobList.
func (in *CronJobList) DeepCopy() *CronJobList {
	if in == nil {
		return nil
	}
	out := new(CronJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronJobManifest) DeepCopyInto(out *CronJobManifest) {
	*out = *in
	if in.TaskSchedule != nil {
		in, out := &in.TaskSchedule, &out.TaskSchedule
		*out = new(Schedule)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronJobManifest.
func (in *CronJobManifest) DeepCopy() *CronJobManifest {
	if in == nil {
		return nil
	}
	out := new(CronJobManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultModelAlias) DeepCopyInto(out *DefaultModelAlias) {
	*out = *in
	out.DefaultModelAliasManifest = in.DefaultModelAliasManifest
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultModelAlias.
func (in *DefaultModelAlias) DeepCopy() *DefaultModelAlias {
	if in == nil {
		return nil
	}
	out := new(DefaultModelAlias)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultModelAliasList) DeepCopyInto(out *DefaultModelAliasList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DefaultModelAlias, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultModelAliasList.
func (in *DefaultModelAliasList) DeepCopy() *DefaultModelAliasList {
	if in == nil {
		return nil
	}
	out := new(DefaultModelAliasList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultModelAliasManifest) DeepCopyInto(out *DefaultModelAliasManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultModelAliasManifest.
func (in *DefaultModelAliasManifest) DeepCopy() *DefaultModelAliasManifest {
	if in == nil {
		return nil
	}
	out := new(DefaultModelAliasManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiver) DeepCopyInto(out *EmailReceiver) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.EmailReceiverManifest.DeepCopyInto(&out.EmailReceiverManifest)
	if in.AddressAssigned != nil {
		in, out := &in.AddressAssigned, &out.AddressAssigned
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiver.
func (in *EmailReceiver) DeepCopy() *EmailReceiver {
	if in == nil {
		return nil
	}
	out := new(EmailReceiver)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiverList) DeepCopyInto(out *EmailReceiverList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EmailReceiver, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiverList.
func (in *EmailReceiverList) DeepCopy() *EmailReceiverList {
	if in == nil {
		return nil
	}
	out := new(EmailReceiverList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmailReceiverManifest) DeepCopyInto(out *EmailReceiverManifest) {
	*out = *in
	if in.AllowedSenders != nil {
		in, out := &in.AllowedSenders, &out.AllowedSenders
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmailReceiverManifest.
func (in *EmailReceiverManifest) DeepCopy() *EmailReceiverManifest {
	if in == nil {
		return nil
	}
	out := new(EmailReceiverManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvVar) DeepCopyInto(out *EnvVar) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvVar.
func (in *EnvVar) DeepCopy() *EnvVar {
	if in == nil {
		return nil
	}
	out := new(EnvVar)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrHTTP) DeepCopyInto(out *ErrHTTP) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrHTTP.
func (in *ErrHTTP) DeepCopy() *ErrHTTP {
	if in == nil {
		return nil
	}
	out := new(ErrHTTP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *File) DeepCopyInto(out *File) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new File.
func (in *File) DeepCopy() *File {
	if in == nil {
		return nil
	}
	out := new(File)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileList) DeepCopyInto(out *FileList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]File, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileList.
func (in *FileList) DeepCopy() *FileList {
	if in == nil {
		return nil
	}
	out := new(FileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in FolderSet) DeepCopyInto(out *FolderSet) {
	{
		in := &in
		*out = make(FolderSet, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FolderSet.
func (in FolderSet) DeepCopy() FolderSet {
	if in == nil {
		return nil
	}
	out := new(FolderSet)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *If) DeepCopyInto(out *If) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new If.
func (in *If) DeepCopy() *If {
	if in == nil {
		return nil
	}
	out := new(If)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Item) DeepCopyInto(out *Item) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Item.
func (in *Item) DeepCopy() *Item {
	if in == nil {
		return nil
	}
	out := new(Item)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeFile) DeepCopyInto(out *KnowledgeFile) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	if in.Approved != nil {
		in, out := &in.Approved, &out.Approved
		*out = new(bool)
		**out = **in
	}
	if in.LastIngestionStartTime != nil {
		in, out := &in.LastIngestionStartTime, &out.LastIngestionStartTime
		*out = (*in).DeepCopy()
	}
	if in.LastIngestionEndTime != nil {
		in, out := &in.LastIngestionEndTime, &out.LastIngestionEndTime
		*out = (*in).DeepCopy()
	}
	if in.LastRunIDs != nil {
		in, out := &in.LastRunIDs, &out.LastRunIDs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeFile.
func (in *KnowledgeFile) DeepCopy() *KnowledgeFile {
	if in == nil {
		return nil
	}
	out := new(KnowledgeFile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeFileList) DeepCopyInto(out *KnowledgeFileList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KnowledgeFile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeFileList.
func (in *KnowledgeFileList) DeepCopy() *KnowledgeFileList {
	if in == nil {
		return nil
	}
	out := new(KnowledgeFileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeSource) DeepCopyInto(out *KnowledgeSource) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.KnowledgeSourceManifest.DeepCopyInto(&out.KnowledgeSourceManifest)
	if in.SyncDetails != nil {
		in, out := &in.SyncDetails, &out.SyncDetails
		*out = make(json.RawMessage, len(*in))
		copy(*out, *in)
	}
	if in.LastSyncStartTime != nil {
		in, out := &in.LastSyncStartTime, &out.LastSyncStartTime
		*out = (*in).DeepCopy()
	}
	if in.LastSyncEndTime != nil {
		in, out := &in.LastSyncEndTime, &out.LastSyncEndTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeSource.
func (in *KnowledgeSource) DeepCopy() *KnowledgeSource {
	if in == nil {
		return nil
	}
	out := new(KnowledgeSource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeSourceInput) DeepCopyInto(out *KnowledgeSourceInput) {
	*out = *in
	if in.OneDriveConfig != nil {
		in, out := &in.OneDriveConfig, &out.OneDriveConfig
		*out = new(OneDriveConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.NotionConfig != nil {
		in, out := &in.NotionConfig, &out.NotionConfig
		*out = new(NotionConfig)
		**out = **in
	}
	if in.WebsiteCrawlingConfig != nil {
		in, out := &in.WebsiteCrawlingConfig, &out.WebsiteCrawlingConfig
		*out = new(WebsiteCrawlingConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeSourceInput.
func (in *KnowledgeSourceInput) DeepCopy() *KnowledgeSourceInput {
	if in == nil {
		return nil
	}
	out := new(KnowledgeSourceInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeSourceList) DeepCopyInto(out *KnowledgeSourceList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KnowledgeSource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeSourceList.
func (in *KnowledgeSourceList) DeepCopy() *KnowledgeSourceList {
	if in == nil {
		return nil
	}
	out := new(KnowledgeSourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KnowledgeSourceManifest) DeepCopyInto(out *KnowledgeSourceManifest) {
	*out = *in
	if in.AutoApprove != nil {
		in, out := &in.AutoApprove, &out.AutoApprove
		*out = new(bool)
		**out = **in
	}
	if in.FilePathPrefixInclude != nil {
		in, out := &in.FilePathPrefixInclude, &out.FilePathPrefixInclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FilePathPrefixExclude != nil {
		in, out := &in.FilePathPrefixExclude, &out.FilePathPrefixExclude
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.KnowledgeSourceInput.DeepCopyInto(&out.KnowledgeSourceInput)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KnowledgeSourceManifest.
func (in *KnowledgeSourceManifest) DeepCopy() *KnowledgeSourceManifest {
	if in == nil {
		return nil
	}
	out := new(KnowledgeSourceManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Metadata) DeepCopyInto(out *Metadata) {
	*out = *in
	in.Created.DeepCopyInto(&out.Created)
	if in.Deleted != nil {
		in, out := &in.Deleted, &out.Deleted
		*out = (*in).DeepCopy()
	}
	if in.Links != nil {
		in, out := &in.Links, &out.Links
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Metadata.
func (in *Metadata) DeepCopy() *Metadata {
	if in == nil {
		return nil
	}
	out := new(Metadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.ModelManifest = in.ModelManifest
	in.ModelStatus.DeepCopyInto(&out.ModelStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelList) DeepCopyInto(out *ModelList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Model, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelList.
func (in *ModelList) DeepCopy() *ModelList {
	if in == nil {
		return nil
	}
	out := new(ModelList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelManifest) DeepCopyInto(out *ModelManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelManifest.
func (in *ModelManifest) DeepCopy() *ModelManifest {
	if in == nil {
		return nil
	}
	out := new(ModelManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelProvider) DeepCopyInto(out *ModelProvider) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.ModelProviderManifest = in.ModelProviderManifest
	in.ModelProviderStatus.DeepCopyInto(&out.ModelProviderStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelProvider.
func (in *ModelProvider) DeepCopy() *ModelProvider {
	if in == nil {
		return nil
	}
	out := new(ModelProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelProviderList) DeepCopyInto(out *ModelProviderList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ModelProvider, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelProviderList.
func (in *ModelProviderList) DeepCopy() *ModelProviderList {
	if in == nil {
		return nil
	}
	out := new(ModelProviderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelProviderManifest) DeepCopyInto(out *ModelProviderManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelProviderManifest.
func (in *ModelProviderManifest) DeepCopy() *ModelProviderManifest {
	if in == nil {
		return nil
	}
	out := new(ModelProviderManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelProviderStatus) DeepCopyInto(out *ModelProviderStatus) {
	*out = *in
	if in.ModelsBackPopulated != nil {
		in, out := &in.ModelsBackPopulated, &out.ModelsBackPopulated
		*out = new(bool)
		**out = **in
	}
	if in.RequiredConfigurationParameters != nil {
		in, out := &in.RequiredConfigurationParameters, &out.RequiredConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.MissingConfigurationParameters != nil {
		in, out := &in.MissingConfigurationParameters, &out.MissingConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.OptionalConfigurationParameters != nil {
		in, out := &in.OptionalConfigurationParameters, &out.OptionalConfigurationParameters
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelProviderStatus.
func (in *ModelProviderStatus) DeepCopy() *ModelProviderStatus {
	if in == nil {
		return nil
	}
	out := new(ModelProviderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ModelStatus) DeepCopyInto(out *ModelStatus) {
	*out = *in
	if in.AliasAssigned != nil {
		in, out := &in.AliasAssigned, &out.AliasAssigned
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ModelStatus.
func (in *ModelStatus) DeepCopy() *ModelStatus {
	if in == nil {
		return nil
	}
	out := new(ModelStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotionConfig) DeepCopyInto(out *NotionConfig) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotionConfig.
func (in *NotionConfig) DeepCopy() *NotionConfig {
	if in == nil {
		return nil
	}
	out := new(NotionConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuthApp) DeepCopyInto(out *OAuthApp) {
	*out = *in
	in.OAuthAppManifest.DeepCopyInto(&out.OAuthAppManifest)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuthApp.
func (in *OAuthApp) DeepCopy() *OAuthApp {
	if in == nil {
		return nil
	}
	out := new(OAuthApp)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuthAppList) DeepCopyInto(out *OAuthAppList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]OAuthApp, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuthAppList.
func (in *OAuthAppList) DeepCopy() *OAuthAppList {
	if in == nil {
		return nil
	}
	out := new(OAuthAppList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuthAppLoginAuthStatus) DeepCopyInto(out *OAuthAppLoginAuthStatus) {
	*out = *in
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuthAppLoginAuthStatus.
func (in *OAuthAppLoginAuthStatus) DeepCopy() *OAuthAppLoginAuthStatus {
	if in == nil {
		return nil
	}
	out := new(OAuthAppLoginAuthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OAuthAppManifest) DeepCopyInto(out *OAuthAppManifest) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OAuthAppManifest.
func (in *OAuthAppManifest) DeepCopy() *OAuthAppManifest {
	if in == nil {
		return nil
	}
	out := new(OAuthAppManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OneDriveConfig) DeepCopyInto(out *OneDriveConfig) {
	*out = *in
	if in.SharedLinks != nil {
		in, out := &in.SharedLinks, &out.SharedLinks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OneDriveConfig.
func (in *OneDriveConfig) DeepCopy() *OneDriveConfig {
	if in == nil {
		return nil
	}
	out := new(OneDriveConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Progress) DeepCopyInto(out *Progress) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = (*in).DeepCopy()
	}
	if in.StepTemplateInvoke != nil {
		in, out := &in.StepTemplateInvoke, &out.StepTemplateInvoke
		*out = new(StepTemplateInvoke)
		(*in).DeepCopyInto(*out)
	}
	if in.Prompt != nil {
		in, out := &in.Prompt, &out.Prompt
		*out = new(Prompt)
		(*in).DeepCopyInto(*out)
	}
	if in.Step != nil {
		in, out := &in.Step, &out.Step
		*out = new(Step)
		(*in).DeepCopyInto(*out)
	}
	if in.ToolInput != nil {
		in, out := &in.ToolInput, &out.ToolInput
		*out = new(ToolInput)
		(*in).DeepCopyInto(*out)
	}
	if in.ToolCall != nil {
		in, out := &in.ToolCall, &out.ToolCall
		*out = new(ToolCall)
		(*in).DeepCopyInto(*out)
	}
	if in.WorkflowCall != nil {
		in, out := &in.WorkflowCall, &out.WorkflowCall
		*out = new(WorkflowCall)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Progress.
func (in *Progress) DeepCopy() *Progress {
	if in == nil {
		return nil
	}
	out := new(Progress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Prompt) DeepCopyInto(out *Prompt) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = (*in).DeepCopy()
	}
	if in.Fields != nil {
		in, out := &in.Fields, &out.Fields
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Prompt.
func (in *Prompt) DeepCopy() *Prompt {
	if in == nil {
		return nil
	}
	out := new(Prompt)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromptResponse) DeepCopyInto(out *PromptResponse) {
	*out = *in
	if in.Responses != nil {
		in, out := &in.Responses, &out.Responses
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromptResponse.
func (in *PromptResponse) DeepCopy() *PromptResponse {
	if in == nil {
		return nil
	}
	out := new(PromptResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Run) DeepCopyInto(out *Run) {
	*out = *in
	in.Created.DeepCopyInto(&out.Created)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Run.
func (in *Run) DeepCopy() *Run {
	if in == nil {
		return nil
	}
	out := new(Run)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunList) DeepCopyInto(out *RunList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Run, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunList.
func (in *RunList) DeepCopy() *RunList {
	if in == nil {
		return nil
	}
	out := new(RunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Step) DeepCopyInto(out *Step) {
	*out = *in
	if in.If != nil {
		in, out := &in.If, &out.If
		*out = new(If)
		(*in).DeepCopyInto(*out)
	}
	if in.While != nil {
		in, out := &in.While, &out.While
		*out = new(While)
		(*in).DeepCopyInto(*out)
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(Template)
		(*in).DeepCopyInto(*out)
	}
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Agents != nil {
		in, out := &in.Agents, &out.Agents
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Workflows != nil {
		in, out := &in.Workflows, &out.Workflows
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Cache != nil {
		in, out := &in.Cache, &out.Cache
		*out = new(bool)
		**out = **in
	}
	if in.Temperature != nil {
		in, out := &in.Temperature, &out.Temperature
		*out = new(float32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Step.
func (in *Step) DeepCopy() *Step {
	if in == nil {
		return nil
	}
	out := new(Step)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StepTemplateInvoke) DeepCopyInto(out *StepTemplateInvoke) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StepTemplateInvoke.
func (in *StepTemplateInvoke) DeepCopy() *StepTemplateInvoke {
	if in == nil {
		return nil
	}
	out := new(StepTemplateInvoke)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubFlow) DeepCopyInto(out *SubFlow) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubFlow.
func (in *SubFlow) DeepCopy() *SubFlow {
	if in == nil {
		return nil
	}
	out := new(SubFlow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Table) DeepCopyInto(out *Table) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Table.
func (in *Table) DeepCopy() *Table {
	if in == nil {
		return nil
	}
	out := new(Table)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TableList) DeepCopyInto(out *TableList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Table, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TableList.
func (in *TableList) DeepCopy() *TableList {
	if in == nil {
		return nil
	}
	out := new(TableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.TaskManifest.DeepCopyInto(&out.TaskManifest)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskEmail) DeepCopyInto(out *TaskEmail) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskEmail.
func (in *TaskEmail) DeepCopy() *TaskEmail {
	if in == nil {
		return nil
	}
	out := new(TaskEmail)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskIf) DeepCopyInto(out *TaskIf) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]TaskStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Else != nil {
		in, out := &in.Else, &out.Else
		*out = make([]TaskStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskIf.
func (in *TaskIf) DeepCopy() *TaskIf {
	if in == nil {
		return nil
	}
	out := new(TaskIf)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskList) DeepCopyInto(out *TaskList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Task, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskList.
func (in *TaskList) DeepCopy() *TaskList {
	if in == nil {
		return nil
	}
	out := new(TaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskManifest) DeepCopyInto(out *TaskManifest) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]TaskStep, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(Schedule)
		**out = **in
	}
	if in.Webhook != nil {
		in, out := &in.Webhook, &out.Webhook
		*out = new(TaskWebhook)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(TaskEmail)
		**out = **in
	}
	if in.OnDemand != nil {
		in, out := &in.OnDemand, &out.OnDemand
		*out = new(TaskOnDemand)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskManifest.
func (in *TaskManifest) DeepCopy() *TaskManifest {
	if in == nil {
		return nil
	}
	out := new(TaskManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskOnDemand) DeepCopyInto(out *TaskOnDemand) {
	*out = *in
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskOnDemand.
func (in *TaskOnDemand) DeepCopy() *TaskOnDemand {
	if in == nil {
		return nil
	}
	out := new(TaskOnDemand)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRun) DeepCopyInto(out *TaskRun) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Task.DeepCopyInto(&out.Task)
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRun.
func (in *TaskRun) DeepCopy() *TaskRun {
	if in == nil {
		return nil
	}
	out := new(TaskRun)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskRunList) DeepCopyInto(out *TaskRunList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TaskRun, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskRunList.
func (in *TaskRunList) DeepCopy() *TaskRunList {
	if in == nil {
		return nil
	}
	out := new(TaskRunList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskStep) DeepCopyInto(out *TaskStep) {
	*out = *in
	if in.If != nil {
		in, out := &in.If, &out.If
		*out = new(TaskIf)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskStep.
func (in *TaskStep) DeepCopy() *TaskStep {
	if in == nil {
		return nil
	}
	out := new(TaskStep)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskWebhook) DeepCopyInto(out *TaskWebhook) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskWebhook.
func (in *TaskWebhook) DeepCopy() *TaskWebhook {
	if in == nil {
		return nil
	}
	out := new(TaskWebhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Thread) DeepCopyInto(out *Thread) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.ThreadManifest.DeepCopyInto(&out.ThreadManifest)
	if in.Env != nil {
		in, out := &in.Env, &out.Env
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Thread.
func (in *Thread) DeepCopy() *Thread {
	if in == nil {
		return nil
	}
	out := new(Thread)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreadList) DeepCopyInto(out *ThreadList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Thread, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreadList.
func (in *ThreadList) DeepCopy() *ThreadList {
	if in == nil {
		return nil
	}
	out := new(ThreadList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThreadManifest) DeepCopyInto(out *ThreadManifest) {
	*out = *in
	if in.Tools != nil {
		in, out := &in.Tools, &out.Tools
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThreadManifest.
func (in *ThreadManifest) DeepCopy() *ThreadManifest {
	if in == nil {
		return nil
	}
	out := new(ThreadManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Time.
func (in *Time) DeepCopy() *Time {
	if in == nil {
		return nil
	}
	out := new(Time)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolCall) DeepCopyInto(out *ToolCall) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolCall.
func (in *ToolCall) DeepCopy() *ToolCall {
	if in == nil {
		return nil
	}
	out := new(ToolCall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolInfo) DeepCopyInto(out *ToolInfo) {
	*out = *in
	if in.CredentialNames != nil {
		in, out := &in.CredentialNames, &out.CredentialNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolInfo.
func (in *ToolInfo) DeepCopy() *ToolInfo {
	if in == nil {
		return nil
	}
	out := new(ToolInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolInput) DeepCopyInto(out *ToolInput) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolInput.
func (in *ToolInput) DeepCopy() *ToolInput {
	if in == nil {
		return nil
	}
	out := new(ToolInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolManifest) DeepCopyInto(out *ToolManifest) {
	*out = *in
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolManifest.
func (in *ToolManifest) DeepCopy() *ToolManifest {
	if in == nil {
		return nil
	}
	out := new(ToolManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolReference) DeepCopyInto(out *ToolReference) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	out.ToolReferenceManifest = in.ToolReferenceManifest
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolReference.
func (in *ToolReference) DeepCopy() *ToolReference {
	if in == nil {
		return nil
	}
	out := new(ToolReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolReferenceList) DeepCopyInto(out *ToolReferenceList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ToolReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolReferenceList.
func (in *ToolReferenceList) DeepCopy() *ToolReferenceList {
	if in == nil {
		return nil
	}
	out := new(ToolReferenceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ToolReferenceManifest) DeepCopyInto(out *ToolReferenceManifest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ToolReferenceManifest.
func (in *ToolReferenceManifest) DeepCopy() *ToolReferenceManifest {
	if in == nil {
		return nil
	}
	out := new(ToolReferenceManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Webhook) DeepCopyInto(out *Webhook) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.WebhookManifest.DeepCopyInto(&out.WebhookManifest)
	if in.AliasAssigned != nil {
		in, out := &in.AliasAssigned, &out.AliasAssigned
		*out = new(bool)
		**out = **in
	}
	if in.LastSuccessfulRunCompleted != nil {
		in, out := &in.LastSuccessfulRunCompleted, &out.LastSuccessfulRunCompleted
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Webhook.
func (in *Webhook) DeepCopy() *Webhook {
	if in == nil {
		return nil
	}
	out := new(Webhook)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookList) DeepCopyInto(out *WebhookList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Webhook, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookList.
func (in *WebhookList) DeepCopy() *WebhookList {
	if in == nil {
		return nil
	}
	out := new(WebhookList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebhookManifest) DeepCopyInto(out *WebhookManifest) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebhookManifest.
func (in *WebhookManifest) DeepCopy() *WebhookManifest {
	if in == nil {
		return nil
	}
	out := new(WebhookManifest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebsiteCrawlingConfig) DeepCopyInto(out *WebsiteCrawlingConfig) {
	*out = *in
	if in.URLs != nil {
		in, out := &in.URLs, &out.URLs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebsiteCrawlingConfig.
func (in *WebsiteCrawlingConfig) DeepCopy() *WebsiteCrawlingConfig {
	if in == nil {
		return nil
	}
	out := new(WebsiteCrawlingConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *While) DeepCopyInto(out *While) {
	*out = *in
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new While.
func (in *While) DeepCopy() *While {
	if in == nil {
		return nil
	}
	out := new(While)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.WorkflowManifest.DeepCopyInto(&out.WorkflowManifest)
	if in.AliasAssigned != nil {
		in, out := &in.AliasAssigned, &out.AliasAssigned
		*out = new(bool)
		**out = **in
	}
	if in.AuthStatus != nil {
		in, out := &in.AuthStatus, &out.AuthStatus
		*out = make(map[string]OAuthAppLoginAuthStatus, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.ToolInfo != nil {
		in, out := &in.ToolInfo, &out.ToolInfo
		*out = new(map[string]ToolInfo)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ToolInfo, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowCall) DeepCopyInto(out *WorkflowCall) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowCall.
func (in *WorkflowCall) DeepCopy() *WorkflowCall {
	if in == nil {
		return nil
	}
	out := new(WorkflowCall)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowExecution) DeepCopyInto(out *WorkflowExecution) {
	*out = *in
	in.Metadata.DeepCopyInto(&out.Metadata)
	in.Workflow.DeepCopyInto(&out.Workflow)
	in.StartTime.DeepCopyInto(&out.StartTime)
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowExecution.
func (in *WorkflowExecution) DeepCopy() *WorkflowExecution {
	if in == nil {
		return nil
	}
	out := new(WorkflowExecution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowExecutionList) DeepCopyInto(out *WorkflowExecutionList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkflowExecution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowExecutionList.
func (in *WorkflowExecutionList) DeepCopy() *WorkflowExecutionList {
	if in == nil {
		return nil
	}
	out := new(WorkflowExecutionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowManifest) DeepCopyInto(out *WorkflowManifest) {
	*out = *in
	in.AgentManifest.DeepCopyInto(&out.AgentManifest)
	if in.Steps != nil {
		in, out := &in.Steps, &out.Steps
		*out = make([]Step, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowManifest.
func (in *WorkflowManifest) DeepCopy() *WorkflowManifest {
	if in == nil {
		return nil
	}
	out := new(WorkflowManifest)
	in.DeepCopyInto(out)
	return out
}
