const Selectors = {
    loginButton: '//button[text()="Login"]',
    obotPopUp: '//dialog[contains(@class, "fixed top-1/2 left-1/2")]',
    continueWithOkta: '//span[text()="Continue with Okta"]',
    continueWithGoogle: '//span[text()="Continue with Google"]',
    clickonAccount: '//div[text()="Use another account"]',
    emailId: '//input[@type="email"]',
    usernameField: '//input[@type="text"]',
    passwordField: '//input[@type="password"]',
    submitButton: '//input[@type="submit"]',
    createnewobotButton: "//button[contains(@class, 'button') and contains(., 'Create New Agent')]",
    editpencilIcon: '//*[contains(@class,"pencil h-5")]/ancestor::button[contains(@class,"group text")]',
    messageContent: '//div[@class="flex w-full items-center gap-4 p-2"]//textarea[@placeholder="Your message..."]',
    updateUsername: '//input[@class="bg-surface grow rounded-lg p-2"]',
    exitEditor: '//button[@class="group relative mr-1 flex items-center rounded-full border p-2 text-xs transition-[background-color] duration-200 border-blue bg-blue text-white md:px-4"]',
    fileIcon:'//label[text()="Your messages"]/following-sibling::div//button',
    obotUpdatedname: '//h4[@class="mb-1!"]',
    deleteButton: '//button[@class="button-destructive"]',
    deleteTool:'(//button[@class="icon-button-small"])[1]',
    fileuploadPopup:"//div[contains(@class, 'default-dialog') and @style='left: 166px; top: 12.833px;']",
    fileuploadButton:"(//label[contains(@class, 'button') and contains(@class, 'flex') and contains(., 'Upload')])[2]",
    filenameVerify:'//span[text()="AI_test.txt"]',
    fileUpload:'//label[contains(normalize-space(), "Upload")]//input[@type="file" and @accept=".pdf, .txt, .doc, .docx, .ppt, .pptx, .md, .rtf, .html, .odt, .ipynb, .json,.csv, .png, .jpg, .jpeg, .webp"]',
    confirmDeleteObotButton: '//h3[text()="Delete the current Obot?"]/following-sibling::button[contains(text(), "Yes") and contains(@class, "bg-red-600")]',
    clickChatbot:'//button[@class="icon-button group relative flex items-center gap-2 p-0 shadow-md"]',
    clickOnDiv:'//div[@id="click-catch"]',
    clickshowOutput:'//button[text()="Show Output"]',
    chatOutputElement:'//p[text()="Output"]/following-sibling::pre[contains(@class,"text")]',
    task: {
        expandTaskMenu: '//div[@class="flex items-center justify-between"]//button[@class="icon-button"][1]',
        createNewTaskButton: '//button[contains(., "New Task")]',
        strongTask: '//strong[text()="TASK"]',
        newTaskTitle: '//input[@class="ghost-input text-2xl font-semibold"]',
        deleteTask: '//strong[text()="TASK"]/../..//button[@class="button-destructive p-4"]',
        confirmDeleteTask: '//h3[contains(text(),"delete this task")]/following-sibling::button[contains(text(), "Yes") and contains(@class, "bg-red-600")]',
        stepsInput: '//textarea[@class="ghost-input border-surface2 ml-1 grow resize-none scrollbar-none"]',
        runButton: "(//button[contains(@class, 'bg-blue') and contains(@class, 'text-white')])",
        advancedOptionBtn:'//button[text()="Show Advanced Options..."]',
        argumentBtn: '(//button[contains(text(),"Argument")])',
        inputArgument: '//input[@placeholder="Enter Name"]',
        argumentPopup: '//h4[text()="Arguments"]/following-sibling::div//input[@id="param-tax calculator"]',
        argumentValue:'//input[@id="param-Enter your income"]',
        submitArgs: "(//button[text()='Run' and contains(@class, 'button-primary')])[2]",
        inputResult: "(//div[contains(@class, 'relative') and contains(@class, 'my-3')])[3]",
        inputTextHeader: '//p[contains(text(),"Here is the tax on your income")]',
        inputText:'//span[@class="text-sm font-semibold" and contains(text(),"Automation")]',
        searchBot: '//textarea[@id="chat"]',
        submitButton:'//button[@type="submit" and contains(@class, "button-colors") and contains(@class, "text-blue")]',
        triggerTypeBtn:'(//button[normalize-space(text())="on demand"])[1]',
        selectTriggerType: (option: string) => `//button[normalize-space(text())='${option}']`,
        webHookURL:'//div[contains(@class, "bg-surface2") and contains(., "https://")]',
        runTask:'//div[contains(@class, "flex") and contains(@class, "truncate")]',
        taskResult:'//ul[@class="ml-4 flex flex-col text-xs"]//li[1]//div',
        tableResult:'//span[text()="Tables "]/../following-sibling::div/div/div/ul/li/button',
        tableRefresh:'//button[text()=" Refresh"]',
        TaskMenu:'//button[.//span[contains(text(), "Tasks")]]',
        sideBar:'(//button[@class="icon-button"])[1]',
        timeTypeBtn: (option: string) => `(//button[normalize-space(text())='${option}'])[1]`,
        clickTask:'//span[text()="Tasks "]',
        createNewTask:'//button[text()=" New Task"]',
        loopStep:'//button[@data-testid="step-loop-btn"]',
        btnrun:'//button[text()="Run "]',
    },
    table:{
        id:'//tbody//tr//td[1]',
        name:'//tbody//tr//td[2]',
        email:'//tbody//tr//td[3]',
        tableTask:'(//div/child::textarea)[2]',
        submitInput:'(//button[@type="submit" and contains(@class,"button-colors")])[2]',
    },
    toolIcon: '//button[@class="button-icon-primary"]',
    addTool: '//button[contains(text(),"Tools")]',
    searchTools: '//input[contains(@placeholder,"Search tools")]',
    selectToolQuery: `(//span[normalize-space(text())="{{toolName}}"])[2]`,
    applyTool: '//button[text()="Apply"]',
    uploadButton: '//label[text()=" Upload "]',
    expandknowledgeFileicon: '//span[text()="Knowledge "]',
    expandFileicon:'//span[text()="Files"]/parent::button[@class="flex items-center gap-2 px-5 py-2"]',
    scrollableDiv: '//div[@class="default-scrollbar-thin flex grow flex-col"]',
    verifytheKnowlegefileName: '//span[@class="ms-3 truncate"]',
    verifythefileName:'//span[@class="truncate"]',
    knowledgeFileUpload: '//label[contains(normalize-space(), "Upload")]//input[@type="file" and @accept=".pdf, .txt, .doc, .docx"]',
    showDetails: '//button[text()="Show Details"]',
    chatbotTextArea: '//div/textarea[@placeholder="Your message..."]',
    submitChat: '//button[@type="submit" and contains(@class,"button-colors")]',
    showAdvanceOptions: '//span[text()="Show Advanced Options..."]',
    advancedOptionTabs: {
        interfaceTab: '//span[text()="Interface"]',
        tasksTab: '//span[text()="Tasks"]',
    },
    chatIntroductionTextArea: '//div/textarea[@placeholder="Introduction"]',
    starterMsgButton: '//span[text()="Starter Message"]/ancestor::button[contains(@class,"button")]',
    starterMsgInput: '//textarea[@id="project-instructions"]',
    chatIntroductionInObot: '//div[contains(@class,"message-content")]',
    chatStarterMsgInObot: '//button/span[@class="line-clamp-3"]',
    agentCatalog:'//a[text()="Agent Catalog"]',
    createNewAgent:'//button[contains(@class, "bg-surface1")]',
    agentEditHover:'//div[@class="flex flex-col items-center justify-center text-center"]',
    agentEditPencilIcon:'(//button[contains(@class, "rounded-full")])[1]',
    updateAgentName:'//input[contains(@class, "ghost-input")]',
    confirmDelete:'(//button[normalize-space(text())="Yes, I\'m sure"])[3]',
    tableInput:'//pre[contains(@class, "whitespace-pre-wrap")]//span[contains(@class, "text-gray-500")]',
    showDetails2: '(//button[text()="Show Details"])[2]',
    showDetails3: '(//button[text()="Show Details"])[3]',

    admin:{
        oktaLogin:'//button[normalize-space(.//div) = "Sign in with Okta"]',
        crateNewAgent:'//button[normalize-space(.//div) = "New Agent"]',
        agentName:'(//div/child::input)[1]',
        agentDes:'(//div/child::input)[2]',
        tryItOutBtn:'//div/child::a',
        editAgent:'(//a[contains(@href, "/admin/agents/")])[1]',
        deleteAgent:'(//a[contains(@href, "/admin/agents/")]/following-sibling::button)[1]',
        confirmDelete:'//div[text()="Confirm"]',
        agenetDeletedMessagge:'//div[@data-content]//div[contains(text(), "Agent deleted")]',
        memoryDropdown:'//p[text()="Memory"]/ancestor::div[contains(@class, "flex")]/following-sibling::div//button',
        setAlwaysOn:'//div[contains(@role, "option")]/span[contains(text(),"Always On")]',
        addTool:'//div[text()=" Add Tools"]',
        addKnowledge:'//div[text()="Add Knowledge"]',
        localFiles:'//div[text()="Local Files"]',
        searchTool:'//input[@placeholder="Search tools..."]',
        googleSearch:'//span[text()="Google Search "]',
        weather:'//span[text()="Weather "]',
        viewAllMemories:'//button[text()="View All Memories"]',
        advanced:'//h4[text()="Advanced"]',
        labelClick: `(//label[normalize-space(text())="{{labelClick}}"])`,
        userleftsideMenu:'//span[text()="Users"]',
        userFilter:'//span[text()="User"]',
        searchText:'//input[@placeholder="Filter..."]',
        clickonthreedotBtn:'//div[@class="flex justify-end"]//button[@type="button"]',
        updateroleBtn:'//div[text()="Update Role"]',
        clickonroleDrp:'//button[@aria-controls="radix-:rceg:"]',
        selectRole:'//span[text()="{{role}}"]',
        updateBtn:'//div[text()="Update"]',
        deleteroleBtn:'//div[text()="Delete User"]',
        deleteBtn:'//div[text()="Delete"]',
        chatthreadMenu:'//a//span[text()="Chat Threads"]',
    },
    agentDes:'//p[@class="text-gray w-sm font-light md:w-md"]',
    authLink:'//a[contains(@class, "bg-blue") and contains(@class, "rounded-3xl") and contains(@class, "text-white")]',
    scheduleDay:'(//button[normalize-space(text())="daily"])[1]',
    scheduleTime:'(//button[normalize-space(text())="on the hour"])[1]',
    homeButton:'//a[@id="navbar-home-link"]',
    continueBtn:'//button[contains(text(), "I dunno")]/following-sibling::button',
    lunchAgent:'//button[normalize-space(text())="Launch Agent"]',
    obotEditArea:'//button[@id="edit-basic-details-button"]',
    editAreaPencil: '(//button[@id="edit-basic-details-button"]/child::div)[2]',
    editAgentName:'//input[@id="project-name"]',
    obotNav:'(//div/child::span/following-sibling::button)[1]',
    closeEditArea:'//button[@class="icon-button absolute top-2 right-2"]',
    addKnowledge:'//p[text()="Knowledge"]/following-sibling::div',
    clicksNewThread:'//a[.//img[@alt="Obot icon"]]/following-sibling::button',
    memoryValidate:'//tr//td[2]',
    refreashMemory:'//span[text()="Most recent memories"]/../div',
    memoryIcon:'//button[@data-memories-btn and contains(@class, "icon-button")]',
    closeMemory:'(//button[contains(@class, "absolute top-0 right-0 p-3")])[1]',
    deleteAllMemory:'(//div//button[contains(text()," Delete All")])[2]',
    deleteMemoryValidate:'//p[text()="No memories stored"]',
    startFromScratch:'//button[text()=" Create From Scratch"]',
    configuration:'//span[text()="Configuration "]',
    editObotName:'//span[text()="Name & Description "]',
    mcpServer:'//span[text()="MCP Servers "]',
    addMCPServer:'//button[text()=" Add MCP Server"]',
    searchMCPTool: '//input[@placeholder="Search MCP Servers..."]',
    selectedTool: `(//h4[normalize-space(text())="{{mcpTool}}"])`,
    mcpStep: `(//button[(text())="{{mcpStep}}"])`,
    selectServer:'(//button[text()="Select Server "])',
    addServer:'//button[text()="Add server"]',
    validateMCPTool: (option: string) => `//p[normalize-space(text())="${option}"]`,
    knowledge:'//span[text()="Knowledge "]',
    selectFromSidebar:`(//span[(text())="{{select}}"])`,
    enableChatBot:'//h5[text()="Enable"]/../label',
    copyTemplates:'//div/a[@class="overflow-hidden text-sm text-ellipsis hover:underline"]',
    copyChatBot:'//div/a[@class="overflow-hidden text-ellipsis hover:underline"]',
    validateThread:'//button[text()="New Thread"]',
    // btnIUnderstand:'//button[text()="I Understand"]',
    btnClick: `(//button[normalize-space(text())="{{btnclick}}"])`,
    templatePencil:'(//button[contains(@class, "text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200")])[2]',
    publicTemplate:'(//span[@class="slider rounded-2xl"])[3]',
    templateName:'//div//div//h3[@class="text-base font-medium"]',
    modelApi:'//input[@id="OBOT_OPENAI_MODEL_PROVIDER_API_KEY"]',
    modelSelect: `(//label[(text())="{{modelSelect}}"])`,
    ValidateModel:'//button[@title="Select model for this thread"]',
    gpt3btn:'//div[text()="gpt-3.5-turbo"]',
    gpt4btn:'//div[text()="gpt-4"]',
    message:'//label[text()="Your messages"]',
    databaseOn:'//span[text()="Toggle Capability"]/../span[2]',
    profileIcon:'//a[@id="navbar-home-link"]/following-sibling::button',
    logOut:'//a[text()=" Log out"]',
    cancelTool:'//span[text()=" AWS S3"]/following-sibling::button',
    clickherelink:'//span[text()="click here"]',
    signinHubspot:"//i18n-string[normalize-space()='Sign in to your HubSpot account']",
    loginHubspotButton:'//i18n-string[text()="Log in"]',
    emailHubspot:'//input[@type="email"]',
    nextButton:'//button[@type="submit"]//i18n-string',
    passwordHubspot:'//input[@type="password"]',
    authentication: '//p[text()="Authentication is required."]',
    // fillEmail: '//input[@placeholder="Email, phone, or Skype"]',
    fillEmail: '//input[@autocomplete="username"]',
    clickNext:'//input[@value="Next"]',
    getCode:'//button[text()="Send code"]',
    
    MCP:{
        googlebtn: '//span[text()="Continue with Google"]',
        emailInput: '//input[@type="email"]',
        nextbtn: '//span[text()="Next"]',
        passwordInput: '//input[@type="password"]',
        cntBtn: '//span[text()="Continue"]',
        navigationbtn: '//button[@class="icon-button z-20"]',
        clickChatObot: '//button[normalize-space(text())="Chat"]',
        connectorbtn: '//p[normalize-space(text())="Connectors"]/following-sibling::button',
        mcpSearchInput: '//input[normalize-space(@placeholder)="Search by name..."]',
        // selectMCPServer: '//p[normalize-space(text())="WordPress1"]',
        selectMCPServer: (option: string) => `//p[normalize-space(text())="${option}"]/ancestor::div[contains(@class, 'flex')]/button`,
        wpSiteURL: '//input[normalize-space(@id)="WORDPRESS_SITE"]',
        wpUsername: '//input[normalize-space(@id)="WORDPRESS_USERNAME"]',
        wpPassword: '//input[normalize-space(@id)="WordPress App Password"]',
        btnClick: (option: string) => `//button[normalize-space(text())="${option}"]`,
        promptInput: '//div[@class="plaintext-editor text-md relative w-full flex-1 grow resize-none p-2 leading-8 outline-none"]',
        // submitPrompt: '//button[@type="submit"]',
        // obotInput: '//div[@class="ProseMirror editor"]',
        gitlabToken: '//input[@name="GitLab Personal Access Token"]',
        // messageContainer: "//div[contains(@class, 'flex-1') and contains(@class, 'flex-col') and contains(@class, 'justify-start') and contains(@class, 'gap-8')]",
        obotInput: "//div[contains(@class,'ProseMirror') and @contenteditable='true']",
        submitPrompt: '//button[@type="submit"]',
        lastBotReply: '//div[@class="message-content"]',
        messageContainer: "//div[contains(@class, 'flex-1') and contains(@class, 'flex-col') and contains(@class, 'justify-start') and contains(@class, 'gap-8')]"
      
    }
}
export default Selectors;