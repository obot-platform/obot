@import 'tailwindcss';

@plugin 'tailwind-scrollbar' {
	nocompatible: true;
	preferredstrategy: 'pseudoelements';
}

@custom-variant dark (&:is(.dark *));

@theme {
	--font-*: initial;
	--font-sans:
		Poppins, ui-sans-serif, system-ui, -apple-system, system-ui, Segoe UI, Roboto, Helvetica Neue,
		Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol,
		Noto Color Emoji;
	--font-body:
		Poppins, ui-sans-serif, system-ui, -apple-system, system-ui, Segoe UI, Roboto, Helvetica Neue,
		Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol,
		Noto Color Emoji;
	--font-mono:
		ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;

	--color-*: initial;
	--color-background: var(--background);
	--color-on-background: var(--on-background);
	--color-surface1: var(--surface1);
	--color-on-surface1: var(--on-surface1);
	--color-surface2: var(--surface2);
	--color-on-surface2: var(--on-surface2);
	--color-surface3: var(--surface3);
	--color-on-surface3: var(--on-surface3);
	--color-transparent: transparent;
	--color-current: currentColor;

	--color-red-50: #fef2f2;
	--color-red-100: #fee2e2;
	--color-red-200: #fecaca;
	--color-red-300: #fca5a5;
	--color-red-400: #f87171;
	--color-red-500: #ef4444;
	--color-red-600: #dc2626;
	--color-red-700: #b91c1c;
	--color-red-800: #991b1b;
	--color-red-900: #7f1d1d;
	--color-red-950: #450a0a;

	--color-blue-50: #eff5ff;
	--color-blue-100: #dce7fd;
	--color-blue-200: #c0d5fd;
	--color-blue-300: #95bcfb;
	--color-blue-400: #6397f7;
	--color-blue-500: #4f7ef3;
	--color-blue-600: #2953e7;
	--color-blue-700: #213fd4;
	--color-blue-800: #2135ac;
	--color-blue-900: #203188;
	--color-blue-950: #182153;
	--color-blue: #4f7ef3;

	--text-md: 0.9375rem;

	--color-black: hsl(0 0 0);
	--color-white: hsl(0 0 100);
	--color-gray: hsl(0 0 calc(2.5 + 50));
	--color-gray-50: hsl(0 0 calc(2.5 + 95));
	--color-gray-60: hsl(0 0 calc(2.5 + 94));
	--color-gray-70: hsl(0 0 calc(2.5 + 93));
	--color-gray-80: hsl(0 0 calc(2.5 + 92));
	--color-gray-90: hsl(0 0 calc(2.5 + 91));
	--color-gray-100: hsl(0 0 calc(2.5 + 90));
	--color-gray-200: hsl(0 0 calc(2.5 + 80));
	--color-gray-300: hsl(0 0 calc(2.5 + 70));
	--color-gray-400: hsl(0 0 calc(2.5 + 60));
	--color-gray-500: hsl(0 0 calc(2.5 + 50));
	--color-gray-600: hsl(0 0 calc(2.5 + 40));
	--color-gray-700: hsl(0 0 calc(2.5 + 30));
	--color-gray-800: hsl(0 0 calc(2.5 + 20));
	--color-gray-900: hsl(0 0 calc(2.5 + 10));
	--color-gray-910: hsl(0 0 calc(2.5 + 9));
	--color-gray-920: hsl(0 0 calc(2.5 + 8));
	--color-gray-930: hsl(0 0 calc(2.5 + 7));
	--color-gray-940: hsl(0 0 calc(2.5 + 6));
	--color-gray-950: hsl(0 0 calc(2.5 + 5));
	--color-gray-960: hsl(0 0 calc(2.5 + 4));
	--color-gray-970: hsl(0 0 calc(2.5 + 3));
	--color-gray-980: hsl(0 0 calc(2.5 + 2));
	--color-gray-990: hsl(0 0 calc(2.5 + 1));
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}

	body {
		background-color: white;
		color: black;
		.dark & {
			background-color: black;
			color: var(--color-gray-50);
		}
	}

	dialog {
		border-radius: 0.75rem; /* rounded-xl */
		border-width: 1px;
		border-color: var(--surface3);
		margin: auto;
		background-color: white;
		font-size: 0.875rem; /* text-sm */
		color: black;
		box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1); /* shadow-lg */
		margin: auto;
		.dark & {
			background-color: var(--surface2);
			color: white;
		}
	}

	dialog::backdrop {
		background-color: black;
		opacity: 0.6;
	}

	textarea,
	input {
		background-color: var(--background);
		color: var(--on-background);
	}

	blockquote {
		border-left-width: 2px;
		border-color: var(--color-gray-200);
		padding-left: 1rem; /* pl-4 */
		font-style: italic;
	}

	li:has(input[type='checkbox'])::marker {
		color: transparent;
	}

	button {
		cursor: pointer;
	}
}

@layer components {
	.icon-button-colors {
		color: var(--color-gray-500);
		&:hover {
			background-color: var(--surface3);
		}
		&:focus {
			outline: none;
		}
		.dark & {
			color: var(--color-gray-400);
		}
	}

	.icon-button {
		display: flex;
		min-height: 2.5rem; /* min-h-10 */
		min-width: 2.5rem; /* min-w-10 */
		align-items: center;
		justify-content: center;
		border-radius: 9999px; /* rounded-full */
		padding: 0.625rem; /* p-2.5 */
		font-size: 0.875rem; /* text-sm */
		transition-property: all;
		transition-duration: 200ms;
		color: var(--color-gray-500);
		&:hover {
			background-color: var(--surface3);
		}
		&:focus {
			outline: none;
		}
		.dark & {
			color: var(--color-gray-400);
		}
	}

	.icon-default {
		height: 1.25rem; /* h-5 */
		width: 1.25rem; /* w-5 */
	}

	.icon-button-small {
		border-radius: 0.5rem; /* rounded-lg */
		padding: 0.25rem; /* p-1 */
		font-size: 0.875rem; /* text-sm */
		transition-property: all;
		transition-duration: 200ms;
		color: var(--color-gray-500);
		&:hover {
			background-color: var(--surface3);
		}
		&:focus {
			outline: none;
		}
		.dark & {
			color: var(--color-gray-400);
		}
	}

	.icon-default-size {
		height: 1.25rem; /* h-5 */
		width: 1.25rem; /* w-5 */
	}

	.button-layout {
		border-radius: 1.5rem; /* rounded-3xl */
		border-width: 2px; /* border-2 */
		padding: 0.5rem 1.25rem; /* px-5 py-2 */
	}

	.button-colors {
		background-color: var(--surface3);
		border-width: 0;
		&:hover {
			background-color: rgb(229 231 235 / 0.5); /* bg-gray-200/50 */
		}
		.dark &:hover {
			background-color: var(--color-gray-700);
		}
	}

	.button {
		border-radius: 1.5rem;
		border-width: 2px;
		padding: 0.5rem 1.25rem;
		background-color: var(--surface3);
		border-width: 0;
		transition-property: color;
		transition-duration: 200ms;
		&:hover {
			background-color: rgb(229 231 235 / 0.5);
		}
		.dark &:hover {
			background-color: var(--color-gray-700);
		}
	}

	.button-small {
		composes: button;
		display: flex;
		align-items: center;
		gap: 0.25rem; /* gap-1 */
		font-size: 0.875rem; /* text-sm */
	}

	.button-secondary-colors {
		border-color: var(--color-gray-100);
		&:hover {
			border-color: var(--color-gray-200);
			background-color: var(--color-gray-200);
		}
		.dark & {
			border-color: var(--color-gray-900);
		}
		.dark &:hover {
			border-color: var(--color-gray-800);
			background-color: var(--color-gray-800);
		}
	}

	.button-secondary {
		composes: button-layout;
		composes: button-secondary-colors;
	}

	.button-primary-colors {
		border-color: var(--color-blue);
		background-color: var(--color-blue);
		color: white;
		&:hover {
			border-color: var(--color-blue-400);
			background-color: var(--color-blue-400);
		}
		.dark & {
			color: var(--color-gray-50);
		}
	}

	.button-primary {
		composes: button-layout;
		composes: button-primary-colors;
	}

	.button-icon-primary {
		display: flex;
		align-items: center;
		justify-content: center;
		border-radius: 9999px; /* rounded-full */
		padding: 0.5rem; /* p-2 */
		color: var(--color-gray);
		&:hover {
			color: var(--color-blue);
			background-color: var(--color-gray-100);
		}
		&:focus {
			outline: none;
		}
		.dark &:hover {
			background-color: rgb(55 65 81 / 0.3); /* bg-gray-700/30 */
		}
	}

	.button-destructive {
		display: flex;
		align-items: center;
		gap: 0.25rem;
		border-radius: 9999px;
		background-color: rgb(239 68 68 / 0.2); /* bg-red-500/20 */
		padding: 1rem 1rem; /* px-4 py-2 */
		font-size: 0.875rem;
		color: var(--color-red-500);
		transition-property: all;
		transition-duration: 200ms;
		&:hover {
			background-color: var(--color-red-500);
			color: white;
		}
	}

	.list-button-primary {
		composes: button-icon-primary;
		padding: 0 !important;
		&:hover {
			background-color: transparent;
		}
	}

	.text-input {
		width: 100%;
		border-radius: 0.5rem;
		background-color: var(--color-gray-100);
		padding: 0.5rem;
		outline: none;
		&:focus {
			--tw-ring-width: 2px;
			--tw-ring-color: var(--color-blue);
			--tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width)
				var(--tw-ring-offset-color);
			--tw-ring-shadow: var(--tw-ring-inset) 0 0 0
				calc(var(--tw-ring-width) + var(--tw-ring-offset-width)) var(--tw-ring-color);
			box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
		}
		.dark & {
			background-color: var(--color-gray-900);
		}
	}

	.default-scrollbar-thin {
		overflow: auto;
		scrollbar-width: thin;
		scrollbar-color: var(--surface3) var(--surface2);
	}

	.default-scrollbar {
		scrollbar-color: var(--surface3) var(--surface1);
	}

	.scrollbar-stable-gutter {
		scrollbar-gutter: stable;
	}

	.scrollbar-none {
		scrollbar-width: none;
	}

	.default-dialog {
		border-radius: 0.75rem;
		border-width: 1px;
		border-color: var(--surface3);
		background-color: white;
		font-size: 0.875rem;
		color: black;
		box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1);
		.dark & {
			background-color: var(--surface2);
			color: white;
		}
	}

	.colors-background {
		background-color: var(--background);
		color: var(--on-background);
	}

	.colors-surface1 {
		background-color: var(--surface1);
		color: var(--on-surface1);
	}

	.colors-surface2 {
		background-color: var(--surface2);
		color: var(--on-surface2);
	}

	.colors-surface3 {
		background-color: var(--surface3);
		color: var(--on-surface3);
	}

	.card {
		display: flex;
		min-height: 10rem; /* min-h-40 */
		width: 100%;
		gap: 0.5rem;
		border-radius: 0.75rem;
		background-color: var(--surface1);
		transition-property: all;
		transition-duration: 300ms;
		&:hover {
			transform: translateY(-0.5rem);
			box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1);
		}
	}

	.card-icon-button-colors {
		color: var(--on-surface1);
		background-color: rgb(243 244 246 / 0.35);
		transition-property: all;
		transition-duration: 300ms;
		&:hover {
			background-color: rgb(243 244 246 / 0.75);
		}
		&:focus {
			outline: none;
		}
		.dark & {
			background-color: rgb(17 24 39 / 0.25);
		}
		.dark &:hover {
			background-color: rgb(17 24 39 / 0.75);
		}
	}

	.featured-card-layout {
		margin-bottom: 2rem;
		display: grid;
		width: 100%;
		gap: 1rem;
		grid-template-columns: repeat(1, minmax(0, 1fr));
		@media (min-width: 640px) {
			grid-template-columns: repeat(2, minmax(0, 1fr));
		}
		@media (min-width: 1024px) {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
		@media (min-width: 1536px) {
			grid-template-columns: repeat(4, minmax(0, 1fr));
		}
	}

	.card-layout {
		margin-bottom: 2rem;
		display: grid;
		gap: 1rem;
		grid-template-columns: repeat(2, minmax(0, 1fr));
		@media (min-width: 640px) {
			grid-template-columns: repeat(3, minmax(0, 1fr));
		}
		@media (min-width: 1024px) {
			grid-template-columns: repeat(4, minmax(0, 1fr));
		}
		@media (min-width: 1536px) {
			grid-template-columns: repeat(6, minmax(0, 1fr));
		}
	}

	.tooltip {
		border-radius: 0.5rem;
		border: 1px solid var(--surface3);
		background-color: var(--surface2);
		padding: 0.5rem;
		font-size: 0.875rem;
		font-weight: 300;
		box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
	}

	.menu-button {
		display: flex;
		min-height: 2.5rem;
		min-width: 2.5rem;
		align-items: center;
		gap: 0.5rem;
		border-radius: 0.5rem;
		padding: 0.5rem;
		padding-top: 1rem;
		padding-bottom: 1rem;
		font-size: 0.875rem;
		transition-property: all;
		transition-duration: 200ms;
		&:hover {
			background-color: var(--surface2);
		}
		.dark &:hover {
			background-color: var(--surface3);
		}
		@media (min-width: 768px) {
			padding-top: 0.5rem;
			padding-bottom: 0.5rem;
		}
	}

	.ghost-input {
		border-bottom-width: 1px;
		border-color: transparent;
		background-color: transparent;
		padding-top: 0.5rem;
		padding-bottom: 0.5rem;
		outline: none;
		transition-property: all;
		transition-duration: 300ms;
		&:focus {
			border-color: var(--surface2);
		}
	}

	.centered {
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
}

.dark {
	--background: var(--color-black);
	--on-background: var(--color-gray-50);
	--surface1: var(--color-gray-950);
	--on-surface1: var(--color-gray-50);
	--surface2: var(--color-gray-900);
	--on-surface2: var(--color-gray-50);
	--surface3: var(--color-gray-800);
	--on-surface3: var(--color-gray-50);
}

html {
	--background: var(--color-white);
	--on-background: var(--color-black);
	--surface1: var(--color-gray-70);
	--on-surface1: var(--color-black);
	--surface2: var(--color-gray-100);
	--on-surface2: var(--color-black);
	--surface3: var(--color-gray-200);
	--on-surface3: var(--color-black);
}
